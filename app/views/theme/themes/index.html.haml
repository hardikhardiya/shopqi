=content_for :filter do
  #filter-bar.png_bg
    .prices.selection-bar
      %ul
        %li.first.selected.price.png_bg
          %a.price(href="#" rel="both") Whole
        %li.price.png_bg
          %a.price(href="#price=free" rel="free") Free
        %li.last.price.png_bg
          %a.price(href="#price=paid" rel="paid") Charge
    .colors.selection-bar
      %ul
        %li.first.selected.color.png_bg
          %a.color(href="#" rel="") All colors
        -Theme::COLOR.each do |color|
          %li.color(class="#{color == Theme::COLOR.last and 'last'}")
            %a.color(href="#color=#{color}" rel="#{color}")=image_tag "buttons/button-color#{color}.png", class: 'png_bg'
    -#
      .sortby.dropdown
        %ul#sortby-dropdown
          %li.sortby
            %a.sortby(href="#" rel="")
              %span Sort
        %ul.drop(style="display:none;")
          %li.sortby
            %a.sortby(href="/?sortby=Newest+Themes" rel="Newest Themes") New Topic
          %li.sortby
            %a.sortby(href="/?sortby=Official+Themes" rel="Official Themes") The official theme
          %li.sortby
            %a.sortby(href="/?sortby=Most+Downloaded" rel="Most Downloaded") Up to Download
    =image_tag 'spinner_big.gif',class: 'spinner', style: "display:none"

#content
  #noresults(style="display:none")
    .noresults-message
      %h2 We could not find any topics that match your query criteria
      %p
        Try using a simple query criteria
    -#%h2 Theme closest requirements...
  #theme-grid.clearfix
    %ul#themes.theme-thumbs

%script(id="theme-item" type="text/x-handlebars-template")
  %a(href="/themes/{{{handle}}}/styles/{{{style_handle}}}" rel="nofollow")
    %p.png_bg
      %big {{{budget}}}
      {{#if has_style}}
      %strong.has-style {{{name}}}
      %small {{{style}}}
      {{else}}
      %strong {{{name}}}
      {{/if}}
    =image_tag '/s/theme/screenshots/{{{id}}}/main/medium_original.jpg'

:javascript
  App.init = function(){
    new App.Controllers.Theme.Themes.Index();
    Backbone.history.start();
  }

  App.themes = new App.Collections.Themes();
  new App.Views.Theme.Themes.Index.Index({collection: App.themes});
